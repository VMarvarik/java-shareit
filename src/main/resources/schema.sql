CREATE TABLE IF NOT EXISTS users (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email varchar(76)  UNIQUE NOT NULL,
    name varchar(127)   NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (
        id
     )
);

CREATE TABLE IF NOT EXISTS request (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description varchar(1024)   NOT NULL,
    requestor_id bigint   NOT NULL,
    CONSTRAINT pk_request PRIMARY KEY (
        id
    ),
    CONSTRAINT fk_request_requestor_id FOREIGN KEY (
        requestor_id
    ) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS item (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name varchar(127)   NOT NULL,
    description varchar(1024)   NULL,
    is_available bool   NOT NULL,
    owner_id bigint   NOT NULL,
    request_id bigint   NULL,
    CONSTRAINT pk_item PRIMARY KEY (
        id
    ),
    CONSTRAINT fk_item_owner_id FOREIGN KEY (
        owner_id
    ) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_item_request_id FOREIGN KEY (
        request_id
    ) REFERENCES request (id)
);

CREATE TABLE IF NOT EXISTS booking (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    item_id bigint   NOT NULL,
    booker_id bigint   NOT NULL,
    status varchar(8)   NOT NULL,
    CONSTRAINT pk_booking PRIMARY KEY (
        id
    ),
    CONSTRAINT fk_booking_item_id FOREIGN KEY (
        item_id
    ) REFERENCES item (id) ON DELETE CASCADE,
    CONSTRAINT fk_booking_booker_id FOREIGN KEY (
        booker_id
    ) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comment (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text varchar(1024)   NOT NULL,
    item_id bigint   NOT NULL,
    author_id bigint   NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT pk_comment PRIMARY KEY (
        id
    ),
    CONSTRAINT fk_comment_item_id FOREIGN KEY (
        item_id
    ) REFERENCES item (id) ON DELETE CASCADE,
    CONSTRAINT fk_comment_author_id FOREIGN KEY (
        author_id
    ) REFERENCES users (id) ON DELETE CASCADE
);
